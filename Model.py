# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2021-11-29 21:05:59
"""
import arcpy

def Model():  # Model

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    # Check out any necessary licenses.
    arcpy.CheckOutExtension("BusinessPrem")
    arcpy.CheckOutExtension("Business")

    arcpy.ImportToolbox(r"c:\program files\arcgis\pro\Resources\ArcToolbox\toolboxes\Analysis Tools.tbx")
    # Model Environment settings
    with arcpy.EnvManager(scratchWorkspace=r"Z:\GIS Project\Final\Final.gdb", workspace=r"Z:\GIS Project\Final\Final.gdb"):
        Victoria_BC_Neighbourhoods = "Neighbourhood_Boundaries"
        Drinking_Fountains = "Drinking Fountains"
        Park_Parking_Lots = "Park_Parking_Lots"

        # Process: Sort (Sort) (management)
        Ranked_Neighbourhoods_by_Average_Income = "Z:\\GIS Project\\Final\\Final.gdb\\Neighbourhood_Boundaries_Sort"
        with arcpy.EnvManager(scratchWorkspace=r"Z:\GIS Project\Final\Final.gdb", workspace=r"Z:\GIS Project\Final\Final.gdb"):
            arcpy.management.Sort(in_dataset=Victoria_BC_Neighbourhoods, out_dataset=Ranked_Neighbourhoods_by_Average_Income, sort_field=[["AVG_Income", "DESCENDING"]], spatial_sort_method="UR")

        # Process: Sort (2) (Sort) (management)
        Ranked_Neighbourhoods_by_Ages_25_29 = "Z:\\GIS Project\\Final\\Final.gdb\\Neighbourhood_Boundaries_Sort1"
        with arcpy.EnvManager(scratchWorkspace=r"Z:\GIS Project\Final\Final.gdb", workspace=r"Z:\GIS Project\Final\Final.gdb"):
            arcpy.management.Sort(in_dataset=Victoria_BC_Neighbourhoods, out_dataset=Ranked_Neighbourhoods_by_Ages_25_29, sort_field=[["Age25_29", "DESCENDING"]], spatial_sort_method="UR")

        # Process: Sort (3) (Sort) (management)
        Ranked_Neighbourhoods_by_Females_Aged_0_14 = "Z:\\GIS Project\\Final\\Final.gdb\\Neighbourhood_Boundaries_Sort2"
        with arcpy.EnvManager(scratchWorkspace=r"Z:\GIS Project\Final\Final.gdb", workspace=r"Z:\GIS Project\Final\Final.gdb"):
            arcpy.management.Sort(in_dataset=Victoria_BC_Neighbourhoods, out_dataset=Ranked_Neighbourhoods_by_Females_Aged_0_14, sort_field=[["Female0_14", "DESCENDING"]], spatial_sort_method="UR")

        # Process: Create Fishnet (Create Fishnet) (management)
        Fishnet_50m_x_50m = "Z:\\GIS Project\\Final\\Fishnet.shp"
        with arcpy.EnvManager(scratchWorkspace=r"Z:\GIS Project\Final\Final.gdb", workspace=r"Z:\GIS Project\Final\Final.gdb"):
            Fishnet_label_shp = arcpy.management.CreateFishnet(out_feature_class=Fishnet_50m_x_50m, origin_coord="470815.551889715 5361124.16202452", y_axis_coord="470815.551889715 5361134.16202452", cell_width=50, cell_height=50, number_rows=None, number_columns=None, corner_coord="476158.662099147 5366449.71347763", labels="LABELS", template="470815.551889715 5361124.16202452 476158.662099147 5366449.71347763", geometry_type="POLYGON")[0]

        # Process: Make Suitability Analysis Layer (Make Suitability Analysis Layer) (ba)
        with arcpy.EnvManager(scratchWorkspace=r"Z:\GIS Project\Final\Final.gdb", workspace=r"Z:\GIS Project\Final\Final.gdb"):
            Suitability_Analysis2 = arcpy.ba.MakeSuitabilityAnalysisLayer(in_features=Victoria_BC_Neighbourhoods, layer_name="Suitability Analysis2")[0]

        # Process: Set Criteria Properties (Set Criteria Properties) (ba)
        Suitability_Layer_Based_off_of_3_Parameters = arcpy.ba.SetCriteriaProperties(in_analysis_layer=Suitability_Analysis2, criteria_properties=[["AVG_Income", "AVG_Income", 33.33333333333333, "INVERSE", 36290, "", "", True], ["Age25_29", "Age25_29", 33.33333333333333, "POSITIVE", 930, "", "", True], ["Female0_14", "Female0_14", 33.33333333333333, "POSITIVE", 490, "", "", True]])[0]

        # Process: Clip (Clip) (analysis)
        Clipped_Fishnet_50m_x_50m = "Z:\\GIS Project\\Final\\Final.gdb\\Fishnet_Clip"
        with arcpy.EnvManager(scratchWorkspace=r"Z:\GIS Project\Final\Final.gdb", workspace=r"Z:\GIS Project\Final\Final.gdb"):
            arcpy.analysis.Clip(in_features=Fishnet_50m_x_50m, clip_features=Suitability_Layer_Based_off_of_3_Parameters, out_feature_class=Clipped_Fishnet_50m_x_50m, cluster_tolerance="")

        # Process: Merge (Merge) (management)
        Drinking_Fountains_and_Park_Parking_Lots = "Z:\\GIS Project\\Final\\Final.gdb\\DrinkingFountains_Merge"
        with arcpy.EnvManager(scratchWorkspace=r"Z:\GIS Project\Final\Final.gdb", workspace=r"Z:\GIS Project\Final\Final.gdb"):
            arcpy.management.Merge(inputs=[Drinking_Fountains, Park_Parking_Lots], output=Drinking_Fountains_and_Park_Parking_Lots, field_mappings="OBJECTID \"OBJECTID\" true true false 2 Short 0 2,First,#,Drinking Fountains,OBJECTID,-1,-1,Park_Parking_Lots,OBJECTID,-1,-1", add_source="NO_SOURCE_INFO")

        # Process: Summarize Within (Summarize Within) (analysis)
        Count_of_Ammenities_Within_50m_x_50m_Spaces = "Z:\\GIS Project\\Final\\Final.gdb\\Fishnet_Clip_SummarizeWithin"
        Output_Grouped_Table = ""
        arcpy.analysis.SummarizeWithin(in_polygons=Clipped_Fishnet_50m_x_50m, in_sum_features=Drinking_Fountains_and_Park_Parking_Lots, out_feature_class=Count_of_Ammenities_Within_50m_x_50m_Spaces, keep_all_polygons="KEEP_ALL", sum_fields=[], sum_shape="ADD_SHAPE_SUM", shape_unit="", group_field="", add_min_maj="NO_MIN_MAJ", add_group_percent="NO_PERCENT", out_group_table=Output_Grouped_Table)

if __name__ == '__main__':
    Model()
